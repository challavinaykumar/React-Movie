{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Desktop\\\\Full Stack\\\\coding\\\\react js\\\\Movie App\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, []);\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-demo-3582f-default-rtdb.firebaseio.com/movies.json');\n\n      if (!response.ok) {\n        throw new Error('something went wrong');\n      }\n\n      const loadMovies = [];\n\n      for (const key in data) {}\n\n      const data = await response.json(); // .then(response=> {\n      // return response.json();\n      // }).then(data => {\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-demo-3582f-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Found no Movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  } // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","ok","Error","loadMovies","key","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length"],"sources":["C:/Users/vijay/Desktop/Full Stack/coding/react js/Movie App/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n\n  const [movies,setMovies] = useState([]);\n  const[isLoading, setIsLoading] = useState(false);\n  const[error, setError] = useState(null);\n\n  useEffect(() => {\n     fetchMovieHandler();\n  },[]);\n\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try{\n      const response = await fetch('https://react-demo-3582f-default-rtdb.firebaseio.com/movies.json');\n\n      if(!response.ok){\n        throw new Error('something went wrong');\n      }\n\n      const loadMovies =[];\n      for (const key in data){\n        \n      }\n      const data = await response.json();\n\n    \n       // .then(response=> {\n       // return response.json();\n       // }).then(data => {\n         const transformedMovies = data.results.map(movieData => {\n           return{\n             id:movieData.episode_id,\n             title:movieData.title,\n             openingText: movieData.opening_crawl,\n             releaseDate: movieData.release_date\n           }\n          \n         });\n        \n\n     setMovies(transformedMovies);\n   \n  }catch (error) {\n    setError(error.message);\n   }\n   setIsLoading(false);\n  }, []);\n\n  async function addMovieHandler(movie) {\n   const response = await fetch('https://react-demo-3582f-default-rtdb.firebaseio.com/movies.json',{\n    method:'POST',\n    body: JSON.stringify( movie),\n    headers: {\n      'content-Type' : 'application/json'\n    }\n   });\n   const data =await response.json();\n   console.log(data);\n  }\n\n  let content = <p>Found no Movies.</p>\n\n  if(movies.length > 0) {\n    content = <MoviesList movies = {movies} />;\n  }\n\n  if (error){\n    content =<p>{error}</p>\n  }\n  if (isLoading){\n    content =<p>Loading...</p>;\n  }\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie = {addMovieHandler}/>\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {!isLoading && movies.length >0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length ===0 && !error && <p>Found No Movies</p>}\n        { isLoading && <p>Loading...</p>}\n        {!isLoading && error && <p>{error}</p>} */}{content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}